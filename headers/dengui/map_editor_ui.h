/*    ____         ________     __      _        ______  
 *   |  _ \_      |  ______|   |  \    | |     _/  ____\
 *   | | \_ \_    |  |         |   \   | |    /  _/   
 *   | |   \  |   |  |_____    | |\ \  | |   |  |   _____ 
 *   | |    | |   |  ______|   | | \ \ | |   |  |  |___  | 
 *   | |  _/ _|   |  |         | |  \ \| |    \  \    / /
 *   | |_/ _/     |  |_____    | |   \   |     \_ \__/ /
 *   |____/       |________|   |_|    \__|       \____/
 *               
 * __________________________________________________________
 * __________________________________________________________
 *                       Project DENG 
 *
 *
 * Copyright (C) 2020 - 2021
 * This Software is licensed under Apache License as described 
 * in the LICENSE.md file, which you should have recieved with 
 * this distribution.
 * 
 * You may reproduce and distribute copies of the
 * Work or Derivative Works thereof in any medium, with or without
 * modifications, and in Source or Object form, provided that You
 * meet the following conditions:
 *
 * (a) You must give any other recipients of the Work or
 *     Derivative Works a copy of this License; and
 *
 * (b) You must cause any modified files to carry prominent notices
 *     stating that You changed the files; and
 *
 * (c) You must retain, in the Source form of any Derivative Works
 *     that You distribute, all copyright, patent, trademark, and
 *     attribution notices from the Source form of the Work,
 *     excluding those notices that do not pertain to any part of
 *     the Derivative Works; and
 *
 * (d) If the Work includes a "NOTICE" text file as part of its
 *     distribution, then any Derivative Works that You distribute must
 *     include a readable copy of the attribution notices contained
 *     within such NOTICE file, excluding those notices that do not
 *     pertain to any part of the Derivative Works, in at least one
 *     of the following places: within a NOTICE text file distributed
 *     as part of the Derivative Works; within the Source form or
 *     documentation, if provided along with the Derivative Works; or,
 *     within a display generated by the Derivative Works, if and
 *     wherever such third-party notices normally appear. The contents
 *     of the NOTICE file are for informational purposes only and
 *     do not modify the License. You may add Your own attribution
 *     notices within Derivative Works that You distribute, alongside
 *     or as an addendum to the NOTICE text from the Work, provided
 *     that such additional attribution notices cannot be construed
 *     as modifying the License.
 *
 * You may add Your own copyright statement to Your modifications and
 * may provide additional or different license terms and conditions
 * for use, reproduction, or distribution of Your modifications, or
 * for any such Derivative Works as a whole, provided Your use,
 * reproduction, and distribution of the Work otherwise complies with
 * the conditions stated in this License.
 */ 


#ifndef __MAP_EDITOR_UI_H
#define __MAP_EDITOR_UI_H

#ifdef __MAP_EDITOR_UI_CPP
    #include <stdlib.h>
    #include <vector>
    #include <array>
    #include <string>
    #include <mutex>
    #include <vulkan/vulkan.h>

    #include <common/base_types.h>
    #include <common/err_def.h>
    #include <das/assets.h>

    #include <deng/forward_dec.h>
    #include <deng/deng_math.h>
    #include <deng/surface_window.h>
    #include <deng/vulkan/vulkan_qm.h>
    #include <deng/vulkan/vulkan_resources.h>
    #include <deng/vulkan/vulkan_rend_infos.h>

    #include <utils/font.h>
    #include <utils/shapes.h>
    #include <utils/collision.h>
    #include <dengui/dengui.h>
    #include <dengui/ui_callbacks.h>

    // Main editor window
    #define DENG_MAP_UI_MAIN_WINDOW_FLAGS       DENGUI_WINDOW_FLAG_NO_MOVE | \
                                                DENGUI_WINDOW_FLAG_NO_RESIZE 

    #define DENG_MAP_UI_MAIN_WINDOW_TYPE        dengui::WINDOW_TYPE_STATIC_RIGHT

    // Asset windows
    #define DENG_MAP_UI_ASSET_WINDOW_FLAGS      DENGUI_WINDOW_FLAG_ALWAYS_ON_TOP | \
                                                DENGUI_WINDOW_FLAG_NO_RESIZE
    #define DENG_MAP_UI_ASSET_WINDOW_TYPE       dengui::WINDOW_TYPE_FLOATING

    // Texture windows
    #define DENG_MAP_UI_TEXTURE_WINDOW_FLAGS    DENGUI_WINDOW_FLAG_ALWAYS_ON_TOP | \
                                                DENGUI_WINDOW_FLAG_NO_RESIZE

    #define DENG_MAP_UI_TEXTURE_WINDOW_TYPE     dengui::WINDOW_TYPE_FLOATING

    // Default color scheme
    #define DENG_MAP_UI_PRIMARY_COLOR           DENGUI_DEFAULT_PRIMARY_COLOR
    #define DENG_MAP_UI_SECONDARY_COLOR         DENGUI_DEFAULT_SECONDARY_COLOR
    #define DENG_MAP_UI_TERTIARY_COLOR          DENGUI_DEFAULT_TERTIARY_COLOR

    // Default border mode
    #define DENG_MAP_UI_BORDER                  dengui::BORDER_MEDIUM
#endif

namespace dengui {
    class MapEditor {
    private:
        Events *m_p_ev = NULL;
        Window *m_p_main_win = NULL;
        std::vector<Window*> m_assets_windows;
        std::vector<Window*> m_texture_windows;
        dengMath::vec2<deng_ui32_t> m_win_size;
        dengUtils::StringRasterizer *m_p_sr = NULL;
        ChildPushButton *m_p_pb = NULL;
        ChildContainer *m_p_cont = NULL;

    private:
        std::vector<DropDownElementInfo> getDDMElemInfos();
        void genTestObjects();
    
    public:
        MapEditor (
            EventInfo &ev_info,
            dengUtils::StringRasterizer *p_sr,
            dengMath::vec2<deng_ui32_t> window_size
        );

        ~MapEditor();

    // Getters
    public:
        Events *getEv();
    };
}

#endif
