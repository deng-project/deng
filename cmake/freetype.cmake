#    ____         ________     __      _        ______  
#   |  _ \_      |  ______|   |  \    | |     _/  ____\
#   | | \_ \_    |  |         |   \   | |    /  _/   
#   | |   \  |   |  |_____    | |\ \  | |   |  |   _____ 
#   | |    | |   |  ______|   | | \ \ | |   |  |  |___  | 
#   | |  _/ _|   |  |         | |  \ \| |    \  \    / /
#   | |_/ _/     |  |_____    | |   \   |     \_ \__/ /
#   |____/       |________|   |_|    \__|       \____/
#               
# __________________________________________________________
# __________________________________________________________
#                       Project DENG 
#
#
# Copyright (C) 2020 - 2021
# This Software is licensed under Apache License as described 
# in the LICENSE.md file, which you should have recieved with 
# this distribution.
# 
# You may reproduce and distribute copies of the
# Work or Derivative Works thereof in any medium, with or without
# modifications, and in Source or Object form, provided that You
# meet the following conditions:
#
# (a) You must give any other recipients of the Work or
#     Derivative Works a copy of this License and
#
# (b) You must cause any modified files to carry prominent notices
#     stating that You changed the files and
#
# (c) You must retain, in the Source form of any Derivative Works
#     that You distribute, all copyright, patent, trademark, and
#     attribution notices from the Source form of the Work,
#     excluding those notices that do not pertain to any part of
#     the Derivative Works and
#
# (d) If the Work includes a "NOTICE" text file as part of its
#     distribution, then any Derivative Works that You distribute must
#     include a readable copy of the attribution notices contained
#     within such NOTICE file, excluding those notices that do not
#     pertain to any part of the Derivative Works, in at least one
#     of the following places: within a NOTICE text file distributed
#     as part of the Derivative Works within the Source form or
#     documentation, if provided along with the Derivative Works or,
#     within a display generated by the Derivative Works, if and
#     wherever such third-party notices normally appear. The contents
#     of the NOTICE file are for informational purposes only and
#     do not modify the License. You may add Your own attribution
#     notices within Derivative Works that You distribute, alongside
#     or as an addendum to the NOTICE text from the Work, provided
#     that such additional attribution notices cannot be construed
#     as modifying the License.
#
# You may add Your own copyright statement to Your modifications and
# may provide additional or different license terms and conditions
# for use, reproduction, or distribution of Your modifications, or
# for any such Derivative Works as a whole, provided Your use,
# reproduction, and distribution of the Work otherwise complies with
# the conditions stated in this License.


project(deng)
set(LIBFREETYPE_TARGET "freetype")


# Source list for libfreetype
set (
    LIBFREETYPE_SRC_LIST
    modules/freetype2/src/base/ftsystem.c
    modules/freetype2/src/base/ftinit.c
    modules/freetype2/src/base/ftdebug.c
    modules/freetype2/src/base/ftbase.c
    modules/freetype2/src/base/ftbbox.c
    modules/freetype2/src/base/ftglyph.c
    modules/freetype2/src/base/ftbitmap.c
    modules/freetype2/src/base/ftwinfnt.c
    modules/freetype2/src/cff/cff.c
    modules/freetype2/src/truetype/truetype.c
    modules/freetype2/src/winfonts/winfnt.c
    modules/freetype2/src/raster/raster.c
    modules/freetype2/src/smooth/smooth.c
    modules/freetype2/src/autofit/autofit.c
    modules/freetype2/src/type1/type1.c
    modules/freetype2/src/cid/type1cid.c
    modules/freetype2/src/pfr/pfr.c
    modules/freetype2/src/psaux/psaux.c
    modules/freetype2/src/psnames/psnames.c
    modules/freetype2/src/pshinter/pshinter.c
    modules/freetype2/src/sfnt/sfnt.c
    modules/freetype2/src/bdf/bdf.c
    modules/freetype2/src/type42/type42.c
    modules/freetype2/src/pcf/pcf.c
    modules/freetype2/src/bzip2/ftbzip2.c
    modules/freetype2/src/lzw/ftlzw.c
    modules/freetype2/src/gzip/ftgzip.c
)


# Build static freetype library 
function(BuildFreetype)
    set(LIBFREETYPE ${CMAKE_BINARY_DIR}/libfreetype${STATIC_LIB_EXT})
    add_library (
        ${LIBFREETYPE_TARGET} STATIC
        ${LIBFREETYPE_SRC_LIST}
    )

    target_include_directories (
        ${LIBFREETYPE_TARGET} 
        PUBLIC ./modules/freetype2/include
    )
endfunction()


# Check if building freetype from source is needed or not
function(CheckFreetype)
    # Check if freetype header files are present somewhere in the system
    set(CMAKE_FIND_ROOT_PATH ${CMAKE_SOURCE_DIR})
    set(CMAKE_PREFIX_PATH ${CMAKE_SOURCE_DIR})
    find_path (
        FREETYPE_BT_DIR 
        NAMES "ftbitmap.h"
        NO_CMAKE_ROOT_PATH
    )

    find_path (
        FREETYPE_INCLUDE_DIR 
        NAMES "ft2build.h"
        PATHS "${CMAKE_SOURCE_DIR}"
        NO_CMAKE_ROOT_PATH
    )

    message(STATUS "CMAKE_SOURCE_DIR=" ${CMAKE_SOURCE_DIR})
    message(STATUS "CMAKE_PREFIX_PATH=" ${CMAKE_PREFIX_PATH})
    message(STATUS "CMAKE_FIND_ROOT_PATH=" ${CMAKE_FIND_ROOT_PATH})
    message(STATUS "CMAKE_SYSTEM_INCLUDE_PATH=" ${CMAKE_SYSTEM_INCLUDE_PATH})
    message(STATUS ${FREETYPE_BT_DIR})
    message(STATUS ${FREETYPE_INCLUDE_DIR})
    if(NOT ${FREETYPE_BT_DIR} AND NOT ${FREETYPE_INCLUDE_DIR}) 
        message (
            FATAL_ERROR 
            "No freetype headers found! Please make sure you have freetype installed on your system"
        )
    endif()

    set (
        LIBFREETYPE_INCLUDE_PATH 
        ${FREETYPE_BT_DIR}
        ${FREETYPE_INCLUDE_DIR}
    )


    # Check if static freetype library is found somewhere
    find_file (
        FREETYPE_LIB_DIR
        NAMES libfreetype${STATIC_LIB_EXT}
    )

    # If static library is not found build it from source
    if(NOT FREETYPE_LIB_DIR)
        BuildFreetype()
        include_directories(BEFORE ./modules/freetype2/include)
    else()
        set(LIBFREETYPE ${FREETYPE_LIB_DIR}/libfreetype${STATIC_LIB_EXT})
    endif()
endfunction()
