/*    ____         ________     __      _        ______  
 *   |  _ \_      |  ______|   |  \    | |     _/  ____\
 *   | | \_ \_    |  |         |   \   | |    /  _/   
 *   | |   \  |   |  |_____    | |\ \  | |   |  |   _____ 
 *   | |    | |   |  ______|   | | \ \ | |   |  |  |___  | 
 *   | |  _/ _|   |  |         | |  \ \| |    \  \    / /
 *   | |_/ _/     |  |_____    | |   \   |     \_ \__/ /
 *   |____/       |________|   |_|    \__|       \____/
 *               
 * __________________________________________________________
 * __________________________________________________________
 *                       Project DENG 
 *
 *
 * Copyright (C) 2020 - 2021
 * This Software is licensed under Apache License as described 
 * in the LICENSE.md file, which you should have recieved with 
 * this distribution.
 * 
 * You may reproduce and distribute copies of the
 * Work or Derivative Works thereof in any medium, with or without
 * modifications, and in Source or Object form, provided that You
 * meet the following conditions:
 *
 * (a) You must give any other recipients of the Work or
 *     Derivative Works a copy of this License; and
 *
 * (b) You must cause any modified files to carry prominent notices
 *     stating that You changed the files; and
 *
 * (c) You must retain, in the Source form of any Derivative Works
 *     that You distribute, all copyright, patent, trademark, and
 *     attribution notices from the Source form of the Work,
 *     excluding those notices that do not pertain to any part of
 *     the Derivative Works; and
 *
 * (d) If the Work includes a "NOTICE" text file as part of its
 *     distribution, then any Derivative Works that You distribute must
 *     include a readable copy of the attribution notices contained
 *     within such NOTICE file, excluding those notices that do not
 *     pertain to any part of the Derivative Works, in at least one
 *     of the following places: within a NOTICE text file distributed
 *     as part of the Derivative Works; within the Source form or
 *     documentation, if provided along with the Derivative Works; or,
 *     within a display generated by the Derivative Works, if and
 *     wherever such third-party notices normally appear. The contents
 *     of the NOTICE file are for informational purposes only and
 *     do not modify the License. You may add Your own attribution
 *     notices within Derivative Works that You distribute, alongside
 *     or as an addendum to the NOTICE text from the Work, provided
 *     that such additional attribution notices cannot be construed
 *     as modifying the License.
 *
 * You may add Your own copyright statement to Your modifications and
 * may provide additional or different license terms and conditions
 * for use, reproduction, or distribution of Your modifications, or
 * for any such Derivative Works as a whole, provided Your use,
 * reproduction, and distribution of the Work otherwise complies with
 * the conditions stated in this License.
 */ 


#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(binding = 0) uniform UniformData {
    mat3 view;
} ubo;


// Store color information about asset when it is not texture mapped
layout(binding = 1) uniform ColorData {
    vec4 color;
    uint ignore_transform;
    uint is_unmapped;
} cl;


layout(location = 0) in vec2 in_pos;
layout(location = 1) in vec2 in_tex_pos;

layout(location = 0) out vec4 out_color;
layout(location = 1) out vec2 out_tex_pos;
layout(location = 2) out uint out_is_unmapped;

void main() {
    if(cl.ignore_transform == 1)
        gl_Position = vec4(in_pos, 0.0f, 1.0f);
    
    else {
        mat4 view_mat;
        view_mat[0] = vec4(ubo.view[0], 0.0f);
        view_mat[1] = vec4(ubo.view[1], 0.0f);
        view_mat[2] = vec4(ubo.view[2], 0.0f);
        view_mat[3] = vec4(0.0f, 0.0f, 0.0f, 1.0f);
        gl_Position = view_mat * vec4(in_pos, 0.0f, 1.0f);
    }


    out_tex_pos = in_tex_pos;
    out_color = cl.color;
    out_is_unmapped = cl.is_unmapped;
}
